@model FrontEnd.Models.SalesViewModel

@{
    ViewBag.Title = "Crear Factura";
}


<div class="row">
    <div class="col-12 text-center">
        <h2>Crear Factura</h2>
        <hr class="hrn-hr" />
    </div>
</div>


@Styles.Render("~/Content/Select2/select2.min.css")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="row">
                <div class="col-6">
                    @Html.LabelFor(model => model.cedula_cliente, htmlAttributes: new { @class = "control-label col-md-6" })
                </div>
                <div class="col-6">
                    @Html.LabelFor(model => model.cedula_user, htmlAttributes: new { @class = "control-label col-md-6" })
                </div>
            </div>
            <div class="row">
                <div class="col-1"></div>
                <div class="col-4">
                    @Html.EditorFor(model => model.cedula_cliente, new { htmlAttributes = new { @class = "form-control", @id = "cedCliente", @placeHolder = "Ej: 1-1234-1234", @autoFocus = "true" } })
                    @Html.ValidationMessageFor(model => model.cedula_cliente, "", new { @class = "text-danger" })
                </div>
                <div class="col-2"></div>
                <div class="col-4">
                    @Html.EditorFor(model => model.cedula_user, new { htmlAttributes = new { @class = "form-control", @id = "cedUsuario", @Value = @ViewBag.CedulaUser, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.cedula_user, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-6">
                    @Html.LabelFor(model => model.estado_factura, htmlAttributes: new { @class = "control-label col-md-6" })
                </div>
                <div class="col-6">
                    @Html.LabelFor(model => model.nombre_producto, htmlAttributes: new { @class = "control-label col-md-6" })
                </div>
            </div>
            <div class="row">
                <div class="col-1"></div>
                <div class="col-4">
                    @Html.DropDownListFor(model => model.estado_factura, new SelectList(ViewBag.Estados, "nombreEstado", "nombreEstado"), "--Select--", new { @class = "form-control", @id = "estadoFac" })
                    @Html.ValidationMessageFor(model => model.estado_factura, "", new { @class = "text-danger" })
                </div>
                <div class="col-2"></div>
                <div class="col-4">
                    <select id="productName" name="select" class="form-control select2" onChange="cambiaSelect()">
                        <option value="--Select--"> --Select-- </option>

                        @foreach (var item in ViewBag.Productos)
                        {
                            <option attr-prec=" @item.precio_factura_d" attr-cant=" @item.cantProd"> @item.productName </option>
                        }

                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-6">
                    @Html.LabelFor(model => model.cantidad_producto, htmlAttributes: new { @class = "control-label col-md-6" })
                </div>
                <div class="col-6">
                    @Html.LabelFor(model => model.precio_factura_d, htmlAttributes: new { @class = "control-label col-md-6" })
                </div>
            </div>
            <div class="row">
                <div class="col-1">
                </div>
                <div class="col-4">
                    @Html.EditorFor(model => model.cantidad_producto, new { htmlAttributes = new { @class = "form-control", @id = "cantProducto", @Min = "1", @Max = "" } })
                    @Html.ValidationMessageFor(model => model.cantidad_producto, "", new { @class = "text-danger" })
                </div>
                <div class="col-2"></div>
                <div class="col-4">
                    @Html.EditorFor(model => model.precio_factura_d, new { htmlAttributes = new { @class = "form-control", @id = "precioDetalle", @Min = "1", @Max = "", @placeHolder = "₡", @type="number" } })
                    @Html.ValidationMessageFor(model => model.precio_factura_d, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
            <div class="row">
                <div class="col-4">
                </div>
                <div class="col-4">
                    <a id="addToList" class="btn btn-md btn-block btn-primary" style="color:white;">Agregar Producto</a>
                </div>
            </div>
        </div>
        <div class="row" style="margin-top:0.5in;margin-bottom:0.2in;">
            <div class="table-responsive col-11">
                <center>
                    <table id="detailsTable" class="table table-striped">
                        @*<caption>
                                <center>
                                    <span id="precioTotal" class="pull-right" style="margin-right:100px;"><strong></strong> </span>
                                </center>
                            </caption>*@
                        <thead class="bg-primary">
                            <tr>
                                <th style="width:30%; color:white;">Producto</th>
                                <th style="width:15%; color:white;">Cédula Cliente</th>
                                <th style="width:10%; color:white;">Cantidad</th>
                                <th style="width:15%; color:white;">Precio Total ₡</th>
                                <th style="width:15%; color:white;">Cédula Empleado</th>
                                <th style="width:15%; color:white;">Estado de Factura</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <th id="totCompra" colspan="7" style="text-align:center">Total de la Compra : ₡</th>
                            </tr>
                        </tfoot>
                    </table>
                </center>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-4"></div>
            <div class="col-3"></div>
            <div class="col-2">
                <a href="/Sales" class="btn btn-pill btn-outline-danger" data-dismiss="modal" style="width:100%;">Volver a la Lista</a>
            </div>
            <div class="col-2">
                <button id="saveOrder" type="submit" class="btn btn-pill btn-success" style="width:100%;">Crear Factura</button>
            </div>
        </div>
    </div>
    <center>
        <div class="modal fade" id="newOrderModal">
            <div class="modal-dialog modal-dialog-centered modal-lg" style=" width: 900px !important;">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 id="modalHeader" class="modal-title col-11 text-center"></h4>
                        <h4><i class="material-icons">done</i></h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-12">
                                <h4 id="modalBody"></h4> <br />
                                <h4 id="modalBody2"></h4><br />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <a id="redirect" href="" class=""></a>
                    </div>
                </div>
            </div>
        </div>
    </center>
}



<style>
    .es_valido {
        background: url(/Resources/ico_check_verd.svg) !important;
        background-repeat: no-repeat !important;
        background-position: 92% 10px !important;
    }

    .no_es_valido {
        background: url(/Resources/ico_x_red.svg);
        background-repeat: no-repeat;
        background-position: 92% 10px;
    }
</style>

@section scripts{
    <script src="@Url.Content("~/Scripts/Select2/select2.full.min.js")"></script>
    <script src="@Url.Content("~/Scripts/Mascaras/jquery.maskMoney.js")"></script>
    <script>


        $(document).ready(function () {
            $('#cedCliente').mask('0-0000-0000');
            $('#cedUsuario').mask('0-0000-0000');


            $('#detailsTable').DataTable({
                dom: '',
                "footerCallback": function ( row, data, start, end, display ) {
                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    var intVal = function ( i ) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '')*1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Total de todas las paginas de la tabla
                    total = api
                        .column( 3 )
                        .data()
                        .reduce( function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0 );

                    // Total de esta pagina
                    pageTotal = api
                        .column( 3, { page: 'current'} )
                        .data()
                        .reduce( function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0 );

                    // Update footer
                    $(api.column(3).footer()).html(

                        ' <span> Total de la Compra : ₡ ' + commaSeparateNumber(total) + '</span>'

                    );
                },

                "language": { "url": "../Vendor/DataTables/Spanish.json" },
                  "columnDefs": [
                    {
                        "render": function (data, type, row) {

                            console.log(commaSeparateNumber(data));
                            return commaSeparateNumber(data);
                        },
                        "targets": [3]
                    },
                ]
            });
            $('.select2').select2();

            // After Add A New Order In The List, If You Want, You Can Remove It.
            $(document).on('click', 'a.deleteItem', function (e) {
                e.preventDefault();
                $('#detailsTable').DataTable()
                    .row( $(this).parents('tr') )
                    .remove()
                    .draw();
            });


            //Add Multiple Order.
            $("#addToList").click(function (e) {
                e.preventDefault();
                if ($.trim($("#productName").val()) == "" || $.trim($("#cedCliente").val()) == "" || $.trim($("#cedUsuario").val()) == "" || $.trim($("#estadoFac").val()) == "" || $.trim($("#cantProducto").val()) == "") {
                    validacion();
                     mensajeSistema("Error", 'Por favor corregir los datos marcados con el símbolo: "<img src="/Resources/ico_x_red.svg" />"', "error");
                } else {

                    var productName = $("#productName").val(),
                        cedCliente = $("#cedCliente").val(),
                        cedUsuario = $("#cedUsuario").val(),
                        estado = $("#estadoFac").val(),
                        cantProd = $("#cantProducto").val(),
                        precioDetalle = $("#precioDetalle").val();
                    var precioTot = parseFloat(cantProd) * parseFloat(precioDetalle);
                    var btnx = '<a data-itemId="0" href="#" class="deleteItem">Borrar</a>';
                    precioTot = precioTot.toFixed(0).replace(".", ",");

                /* Agregar Row usando metodo de DATATABLES  https://datatables.net/examples/api/add_row.html */
                    $('#detailsTable').DataTable()
                        .row.add([productName, cedCliente, cantProd, precioTot, cedUsuario, estado, btnx])
                        .draw();
                    clearItem();
                }
            });

            //Collect Multiple Order List For Pass To Controller
            $("#saveOrder").click(function (e) {
                e.preventDefault();

                var orderArr = [];
                orderArr.length = 0;

                $.each($("#detailsTable tbody tr"), function () {
                    orderArr.push({
                        productName: $(this).find('td:eq(0)').html(),
                        cedCliente: $(this).find('td:eq(1)').html(),
                        cantProd: $(this).find('td:eq(2)').html(),
                        precioDetalle: $(this).find('td:eq(3)').html(),
                        cedUsuario: $(this).find('td:eq(4)').html(),
                        estado: $(this).find('td:eq(5)').html()
                    });
                });


                var data = JSON.stringify({
                order: orderArr
                });

                $.when(saveOrder(data)).then(function (response) {
                        console.log(response);
                }).fail(function (err) {
                        console.log(err);
                });
            });

            //Validar Form
            $("form").submit(function () {
                if (!validacion()) {
                    $('#myModal').modal('show');
                    return false;
                } else
                    return true;
            });

        });

        //Cambio Dinámico de Máxima cantidad
        function cambiaSelect() {
                document.getElementById("cantProducto").setAttribute("max", $("#productName option:selected").attr("attr-cant"));
                //$("#cantProducto").val($("#productName option:selected").attr("attr-cant"));
                $("#precioDetalle").val($("#productName option:selected").attr("attr-prec"));
        };

        //After Add A New Order In The List, Clear Clean The Form For Add More Order.
        function clearItem() {
            $("#productName").val('');
            $("#cantProducto").val('');
            $("#precioDetalle").val('₡');
        }

        //After Click Save Button Pass All Data View To Controller For Save Database
        function saveOrder(data) {
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/Sales/Create",
                data: data,
                success: function (result) {
                    document.getElementById("modalHeader").innerHTML = "Estado de Factura: " + $("#estadoFac").val();
                    if ($("#estadoFac").val()=="Procesando") {
                        document.getElementById("modalBody").innerHTML = "¡El proceso de la compra quedó en un estado de espera! <br /> Fecha: @DateTime.Now";
                        document.getElementById("modalBody2").innerHTML = "Cédula Cliente:" + result + " --- Monto Total: ₡" + $(api.column(3).footer()).val();
                        document.getElementById("redirect").setAttribute("href", "/Sales/Index");
                        document.getElementById("redirect").setAttribute("class", "btn btn-block btn-success");
                        document.getElementById("redirect").innerHTML = "Volver a la lista";
                    } else {
                        document.getElementById("modalBody").innerHTML = "¡Compra realizada satisfactoriamente! <br /> Fecha: @DateTime.Now";
                        document.getElementById("modalBody2").innerHTML = "Cliente: " + result + " --- Monto Total: ₡" + $('#totCompra').val();
                        document.getElementById("redirect").setAttribute("href", "/Sales/Index");
                        document.getElementById("redirect").setAttribute("class", "btn btn-block btn-success");
                        document.getElementById("redirect").innerHTML = "Volver a la lista";
                        //$("#cedCliente").val()
                    }
                    $("#newOrderModal").modal();
                },
                error: function () {
                    //location.href = "/Sales/Index";
                    document.getElementById("modalHeader").innerHTML = "¡Fallo a la hora de realizar la compra!";
                    document.getElementById("modalBody").innerHTML = "¡La compra fue fallida revise los datos que ingresó! <br /> Fecha: @DateTime.Now";
                    document.getElementById("modalBody2").innerHTML = "";
                    document.getElementById("redirect").setAttribute("href", "../Sales/Create");
                    document.getElementById("redirect").setAttribute("class", "btn btn-block btn-danger");
                    document.getElementById("redirect").innerHTML = "Volver a la compra";
                    $("#newOrderModal").modal();
                }
            });
        }

        function commaSeparateNumber(val) {
            while (/(\d+)(\d{3})/.test(val.toString())) {
                val = val.toString().replace(/(\d+)(\d{3})/, '$1' + '.' + '$2');
            }
            return val;
        }

        //Funcion Validacion <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        function validacion() {
            let resp = true;
            $("input.form-control").removeClass("es_valido");
            $("input.form-control").removeClass("no_es_valido");


            /*cedCliente*/
            if ($('#cedCliente').val() == null || $('#cedCliente').val().length < 11) {
                $('#cedCliente').addClass("no_es_valido");
                resp = false;
            } else {
                $('#cedCliente').addClass("es_valido");
            }

            /*cedCliente*/
            if ($('#cedula_user').val() == null || $('#cedula_user').val().length < 11) {
                $('#cedula_user').addClass("no_es_valido");
                resp = false;
            } else {
                $('#cedula_user').addClass("es_valido");
            }

            /*estadoFac      ********************************************************** */
            if ($('#estadoFac').prop('selectedIndex') == null || $('#estadoFac').prop('selectedIndex') == 0) {
                    $("#estadoFac").removeClass("es_valido");
                    $('#estadoFac').addClass("no_es_valido");
                resp = false;
            } else {
                $("#estadoFac").removeClass("no_es_valido");
                $('#estadoFac').addClass("es_valido");
            }

            /*select2-productName-container      ********************************************************** */
            if ($('#select2-productName-container').prop('selectedIndex') == null || $('#select2-productName-container').prop('selectedIndex') == 0) {
                    $("#select2-productName-container").removeClass("es_valido");
                    $('#select2-productName-container').addClass("no_es_valido");
                resp = false;
            } else {
                $("#select2-productName-container").removeClass("no_es_valido");
                $('#select2-productName-container').addClass("es_valido");
            }

            /*cantProducto*/
            if ($('#cantProducto').val() == null || $('#cantProducto').val() == "") {
                $('#cantProducto').addClass("no_es_valido");
                resp = false;
            }else {
                $('#cantProducto').addClass("es_valido");
            }

            /*cantProducto*/
            if ($('#precioDetalle').val() == null || $('#precioDetalle').val() == "") {
                $('#precioDetalle').addClass("no_es_valido");
                resp = false;
            }else {
                $('#precioDetalle').addClass("es_valido");
            }


            return resp;
        };



    </script>
}
